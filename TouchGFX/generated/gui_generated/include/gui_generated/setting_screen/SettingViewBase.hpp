/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGVIEWBASE_HPP
#define SETTINGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/setting_screen/SettingPresenter.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>

#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/ScrollUnSelect.hpp>
#include <gui/containers/ScrollSelect.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <gui/containers/CustomContainer1.hpp>
#include <gui/containers/ScrollListContainer.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
class SettingViewBase : public touchgfx::View<SettingPresenter>
{
public:
    SettingViewBase();
    virtual ~SettingViewBase() {}
    virtual void setupScreen();

    virtual void scrollWheel2UpdateItem(ScrollUnSelect& item, int16_t itemIndex)
    {
        // Override and implement this function in Setting
    }

    virtual void scrollWheel2UpdateCenterItem(ScrollSelect& item, int16_t itemIndex)
    {
        // Override and implement this function in Setting
    }

    virtual void scrollWheel3UpdateItem(ScrollUnSelect& item, int16_t itemIndex)
    {
        // Override and implement this function in Setting
    }

    virtual void scrollWheel3UpdateCenterItem(ScrollSelect& item, int16_t itemIndex)
    {
        // Override and implement this function in Setting
    }

    virtual void scrollWheel4UpdateItem(CustomContainer1& item, int16_t itemIndex)
    {
        // Override and implement this function in Setting
    }

    virtual void scrollWheel4UpdateCenterItem(ScrollListContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Setting
    }

    /*
     * Virtual Action Handlers
     */
    virtual void ButtonIsClickedFun()
    {
        // Override and implement this function in Setting
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage1;
    touchgfx::Box box1;
    touchgfx::Slider slider1;
    touchgfx::Button button1;
    touchgfx::ScrollWheel scrollWheel1;

    touchgfx::Slider slider1_1;
    touchgfx::ScrollWheelWithSelectionStyle scrollWheel2;
    touchgfx::DrawableListItems<ScrollUnSelect, 4> scrollWheel2ListItems;
    touchgfx::DrawableListItems<ScrollSelect, 2> scrollWheel2SelectedListItems;

    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextAreaWithOneWildcard ObjectText;
    touchgfx::Box box1_1;
    touchgfx::ClickListener< touchgfx::ToggleButton > toggleButton1;
    touchgfx::ScrollWheelWithSelectionStyle scrollWheel3;
    touchgfx::DrawableListItems<ScrollUnSelect, 4> scrollWheel3ListItems;
    touchgfx::DrawableListItems<ScrollSelect, 2> scrollWheel3SelectedListItems;

    touchgfx::ScrollWheelWithSelectionStyle scrollWheel4;
    touchgfx::DrawableListItems<CustomContainer1, 2> scrollWheel4ListItems;
    touchgfx::DrawableListItems<ScrollListContainer, 2> scrollWheel4SelectedListItems;


    /*
     * Wildcard Buffers
     */
    static const uint16_t OBJECTTEXT_SIZE = 20;
    touchgfx::Unicode::UnicodeChar ObjectTextBuffer[OBJECTTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SettingViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<SettingViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // SETTINGVIEWBASE_HPP
