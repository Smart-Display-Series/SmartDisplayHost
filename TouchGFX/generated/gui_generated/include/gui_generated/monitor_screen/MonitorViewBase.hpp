/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MONITORVIEWBASE_HPP
#define MONITORVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/monitor_screen/MonitorPresenter.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>

class MonitorViewBase : public touchgfx::View<MonitorPresenter>
{
public:
    MonitorViewBase();
    virtual ~MonitorViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void BuzzerOn()
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider1ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider2ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider3ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider4ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider5ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider6ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider7ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider8ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider9ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

    virtual void Slider10ChangeValue(int value)
    {
        // Override and implement this function in Monitor
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage;
    touchgfx::ToggleButton toggleButton1;
    touchgfx::Button button1;
    touchgfx::Slider slider3;
    touchgfx::Slider slider4;
    touchgfx::Slider slider5;
    touchgfx::Slider slider6;
    touchgfx::Slider slider7;
    touchgfx::Slider slider8;
    touchgfx::Slider slider9;
    touchgfx::Slider slider10;
    touchgfx::Slider slider2;
    touchgfx::Slider slider1;
    touchgfx::Image image1;
    touchgfx::Image image2;
    touchgfx::Image image3;
    touchgfx::Image image4;
    touchgfx::Image image5;
    touchgfx::Image image6;
    touchgfx::Image image7;
    touchgfx::Image image8;
    touchgfx::Image image9;
    touchgfx::Image image10;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MonitorViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MonitorViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MONITORVIEWBASE_HPP
